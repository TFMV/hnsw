name: Build and Test

on:
  push:
    branches: [main, master, feature/*]
  pull_request:
    branches: [main, master]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.24"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Test with race detection
        run: go test -race -v ./hnsw/hnsw-extensions/hybrid/...

      - name: Run benchmarks (short)
        run: go test -bench=. -benchmem -short ./hnsw/hnsw-extensions/hybrid/...

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true

      - name: Generate coverage report
        run: |
          go test -coverprofile=coverage.out -covermode=atomic ./hnsw/hnsw-extensions/hybrid/...
          go tool cover -func=coverage.out

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
